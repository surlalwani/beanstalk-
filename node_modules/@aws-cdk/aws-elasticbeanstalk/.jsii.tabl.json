{
  "version": "2",
  "toolVersion": "1.70.0",
  "snippets": {
    "1c01e7fa9a4c5577e0a62038e94d161403dc102b8cde4d5d6456ecba0bc95ec1": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticbeanstalk as elasticbeanstalk",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ElasticBeanstalk;",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticbeanstalk.*;",
          "version": "1"
        },
        "go": {
          "source": "import elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"",
          "version": "1"
        },
        "$": {
          "source": "import * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-elasticbeanstalk"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "import * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';",
      "syntaxKindCounter": {
        "10": 1,
        "75": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "4af78aace703a93fff27f687a409a30068c4dfcaa18fca96b334f27faae33b42": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_application = elasticbeanstalk.CfnApplication(self, \"MyCfnApplication\",\n    application_name=\"applicationName\",\n    description=\"description\",\n    resource_lifecycle_config=elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty(\n        service_role=\"serviceRole\",\n        version_lifecycle_config=elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty(\n            max_age_rule=elasticbeanstalk.CfnApplication.MaxAgeRuleProperty(\n                delete_source_from_s3=False,\n                enabled=False,\n                max_age_in_days=123\n            ),\n            max_count_rule=elasticbeanstalk.CfnApplication.MaxCountRuleProperty(\n                delete_source_from_s3=False,\n                enabled=False,\n                max_count=123\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnApplication cfnApplication = new CfnApplication(this, \"MyCfnApplication\", new CfnApplicationProps {\n    ApplicationName = \"applicationName\",\n    Description = \"description\",\n    ResourceLifecycleConfig = new ApplicationResourceLifecycleConfigProperty {\n        ServiceRole = \"serviceRole\",\n        VersionLifecycleConfig = new ApplicationVersionLifecycleConfigProperty {\n            MaxAgeRule = new MaxAgeRuleProperty {\n                DeleteSourceFromS3 = false,\n                Enabled = false,\n                MaxAgeInDays = 123\n            },\n            MaxCountRule = new MaxCountRuleProperty {\n                DeleteSourceFromS3 = false,\n                Enabled = false,\n                MaxCount = 123\n            }\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnApplication cfnApplication = CfnApplication.Builder.create(this, \"MyCfnApplication\")\n        .applicationName(\"applicationName\")\n        .description(\"description\")\n        .resourceLifecycleConfig(ApplicationResourceLifecycleConfigProperty.builder()\n                .serviceRole(\"serviceRole\")\n                .versionLifecycleConfig(ApplicationVersionLifecycleConfigProperty.builder()\n                        .maxAgeRule(MaxAgeRuleProperty.builder()\n                                .deleteSourceFromS3(false)\n                                .enabled(false)\n                                .maxAgeInDays(123)\n                                .build())\n                        .maxCountRule(MaxCountRuleProperty.builder()\n                                .deleteSourceFromS3(false)\n                                .enabled(false)\n                                .maxCount(123)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnApplication := elasticbeanstalk.NewCfnApplication(this, jsii.String(\"MyCfnApplication\"), &cfnApplicationProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\tdescription: jsii.String(\"description\"),\n\tresourceLifecycleConfig: &applicationResourceLifecycleConfigProperty{\n\t\tserviceRole: jsii.String(\"serviceRole\"),\n\t\tversionLifecycleConfig: &applicationVersionLifecycleConfigProperty{\n\t\t\tmaxAgeRule: &maxAgeRuleProperty{\n\t\t\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tmaxAgeInDays: jsii.Number(123),\n\t\t\t},\n\t\t\tmaxCountRule: &maxCountRuleProperty{\n\t\t\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tmaxCount: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnApplication = new elasticbeanstalk.CfnApplication(this, 'MyCfnApplication', /* all optional props */ {\n  applicationName: 'applicationName',\n  description: 'description',\n  resourceLifecycleConfig: {\n    serviceRole: 'serviceRole',\n    versionLifecycleConfig: {\n      maxAgeRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxAgeInDays: 123,\n      },\n      maxCountRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxCount: 123,\n      },\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplication"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplication",
        "@aws-cdk/aws-elasticbeanstalk.CfnApplicationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplication = new elasticbeanstalk.CfnApplication(this, 'MyCfnApplication', /* all optional props */ {\n  applicationName: 'applicationName',\n  description: 'description',\n  resourceLifecycleConfig: {\n    serviceRole: 'serviceRole',\n    versionLifecycleConfig: {\n      maxAgeRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxAgeInDays: 123,\n      },\n      maxCountRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxCount: 123,\n      },\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 5,
        "75": 17,
        "91": 4,
        "104": 1,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "2c5841827ab8e1233d7b36497bc9ffb9a24b23290cce089013f7367c688dfe76"
    },
    "74e0bda7db23d18564032bf7220dcde059b843d7119cc70844fcc989289e063d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\napplication_resource_lifecycle_config_property = elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty(\n    service_role=\"serviceRole\",\n    version_lifecycle_config=elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty(\n        max_age_rule=elasticbeanstalk.CfnApplication.MaxAgeRuleProperty(\n            delete_source_from_s3=False,\n            enabled=False,\n            max_age_in_days=123\n        ),\n        max_count_rule=elasticbeanstalk.CfnApplication.MaxCountRuleProperty(\n            delete_source_from_s3=False,\n            enabled=False,\n            max_count=123\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nApplicationResourceLifecycleConfigProperty applicationResourceLifecycleConfigProperty = new ApplicationResourceLifecycleConfigProperty {\n    ServiceRole = \"serviceRole\",\n    VersionLifecycleConfig = new ApplicationVersionLifecycleConfigProperty {\n        MaxAgeRule = new MaxAgeRuleProperty {\n            DeleteSourceFromS3 = false,\n            Enabled = false,\n            MaxAgeInDays = 123\n        },\n        MaxCountRule = new MaxCountRuleProperty {\n            DeleteSourceFromS3 = false,\n            Enabled = false,\n            MaxCount = 123\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nApplicationResourceLifecycleConfigProperty applicationResourceLifecycleConfigProperty = ApplicationResourceLifecycleConfigProperty.builder()\n        .serviceRole(\"serviceRole\")\n        .versionLifecycleConfig(ApplicationVersionLifecycleConfigProperty.builder()\n                .maxAgeRule(MaxAgeRuleProperty.builder()\n                        .deleteSourceFromS3(false)\n                        .enabled(false)\n                        .maxAgeInDays(123)\n                        .build())\n                .maxCountRule(MaxCountRuleProperty.builder()\n                        .deleteSourceFromS3(false)\n                        .enabled(false)\n                        .maxCount(123)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\napplicationResourceLifecycleConfigProperty := &applicationResourceLifecycleConfigProperty{\n\tserviceRole: jsii.String(\"serviceRole\"),\n\tversionLifecycleConfig: &applicationVersionLifecycleConfigProperty{\n\t\tmaxAgeRule: &maxAgeRuleProperty{\n\t\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tmaxAgeInDays: jsii.Number(123),\n\t\t},\n\t\tmaxCountRule: &maxCountRuleProperty{\n\t\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tmaxCount: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst applicationResourceLifecycleConfigProperty: elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty = {\n  serviceRole: 'serviceRole',\n  versionLifecycleConfig: {\n    maxAgeRule: {\n      deleteSourceFromS3: false,\n      enabled: false,\n      maxAgeInDays: 123,\n    },\n    maxCountRule: {\n      deleteSourceFromS3: false,\n      enabled: false,\n      maxCount: 123,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationResourceLifecycleConfigProperty: elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty = {\n  serviceRole: 'serviceRole',\n  versionLifecycleConfig: {\n    maxAgeRule: {\n      deleteSourceFromS3: false,\n      enabled: false,\n      maxAgeInDays: 123,\n    },\n    maxCountRule: {\n      deleteSourceFromS3: false,\n      enabled: false,\n      maxCount: 123,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 15,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "387173a629f865b4c9631e58452b5cbdb31ffbd89bc9cb8a895a8c58a5831686"
    },
    "c80c53f555ccdfc172a1f0fad19899309b7f30f46f564d00ff43816d400ca4be": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\napplication_version_lifecycle_config_property = elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty(\n    max_age_rule=elasticbeanstalk.CfnApplication.MaxAgeRuleProperty(\n        delete_source_from_s3=False,\n        enabled=False,\n        max_age_in_days=123\n    ),\n    max_count_rule=elasticbeanstalk.CfnApplication.MaxCountRuleProperty(\n        delete_source_from_s3=False,\n        enabled=False,\n        max_count=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nApplicationVersionLifecycleConfigProperty applicationVersionLifecycleConfigProperty = new ApplicationVersionLifecycleConfigProperty {\n    MaxAgeRule = new MaxAgeRuleProperty {\n        DeleteSourceFromS3 = false,\n        Enabled = false,\n        MaxAgeInDays = 123\n    },\n    MaxCountRule = new MaxCountRuleProperty {\n        DeleteSourceFromS3 = false,\n        Enabled = false,\n        MaxCount = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nApplicationVersionLifecycleConfigProperty applicationVersionLifecycleConfigProperty = ApplicationVersionLifecycleConfigProperty.builder()\n        .maxAgeRule(MaxAgeRuleProperty.builder()\n                .deleteSourceFromS3(false)\n                .enabled(false)\n                .maxAgeInDays(123)\n                .build())\n        .maxCountRule(MaxCountRuleProperty.builder()\n                .deleteSourceFromS3(false)\n                .enabled(false)\n                .maxCount(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\napplicationVersionLifecycleConfigProperty := &applicationVersionLifecycleConfigProperty{\n\tmaxAgeRule: &maxAgeRuleProperty{\n\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\tenabled: jsii.Boolean(false),\n\t\tmaxAgeInDays: jsii.Number(123),\n\t},\n\tmaxCountRule: &maxCountRuleProperty{\n\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\tenabled: jsii.Boolean(false),\n\t\tmaxCount: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst applicationVersionLifecycleConfigProperty: elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty = {\n  maxAgeRule: {\n    deleteSourceFromS3: false,\n    enabled: false,\n    maxAgeInDays: 123,\n  },\n  maxCountRule: {\n    deleteSourceFromS3: false,\n    enabled: false,\n    maxCount: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationVersionLifecycleConfigProperty: elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty = {\n  maxAgeRule: {\n    deleteSourceFromS3: false,\n    enabled: false,\n    maxAgeInDays: 123,\n  },\n  maxCountRule: {\n    deleteSourceFromS3: false,\n    enabled: false,\n    maxCount: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 13,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "caff8781423bcd10d3bcede948c45b80cb0d15a795da7b505bb7269c109639a3"
    },
    "4f7651657bb250c21304210ed22ecdfa81e4935e9539589cbb949e87d36b6951": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\nmax_age_rule_property = elasticbeanstalk.CfnApplication.MaxAgeRuleProperty(\n    delete_source_from_s3=False,\n    enabled=False,\n    max_age_in_days=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nMaxAgeRuleProperty maxAgeRuleProperty = new MaxAgeRuleProperty {\n    DeleteSourceFromS3 = false,\n    Enabled = false,\n    MaxAgeInDays = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nMaxAgeRuleProperty maxAgeRuleProperty = MaxAgeRuleProperty.builder()\n        .deleteSourceFromS3(false)\n        .enabled(false)\n        .maxAgeInDays(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\nmaxAgeRuleProperty := &maxAgeRuleProperty{\n\tdeleteSourceFromS3: jsii.Boolean(false),\n\tenabled: jsii.Boolean(false),\n\tmaxAgeInDays: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst maxAgeRuleProperty: elasticbeanstalk.CfnApplication.MaxAgeRuleProperty = {\n  deleteSourceFromS3: false,\n  enabled: false,\n  maxAgeInDays: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplication.MaxAgeRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplication.MaxAgeRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst maxAgeRuleProperty: elasticbeanstalk.CfnApplication.MaxAgeRuleProperty = {\n  deleteSourceFromS3: false,\n  enabled: false,\n  maxAgeInDays: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 8,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "37f90c65c419f14fc1bbc6af048037a3d4a62820366796f9e3190a6855cc26bb"
    },
    "a4a217ea7a06003f76fa896e620353921da24e89e336589671a276fd2ec64e7f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\nmax_count_rule_property = elasticbeanstalk.CfnApplication.MaxCountRuleProperty(\n    delete_source_from_s3=False,\n    enabled=False,\n    max_count=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nMaxCountRuleProperty maxCountRuleProperty = new MaxCountRuleProperty {\n    DeleteSourceFromS3 = false,\n    Enabled = false,\n    MaxCount = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nMaxCountRuleProperty maxCountRuleProperty = MaxCountRuleProperty.builder()\n        .deleteSourceFromS3(false)\n        .enabled(false)\n        .maxCount(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\nmaxCountRuleProperty := &maxCountRuleProperty{\n\tdeleteSourceFromS3: jsii.Boolean(false),\n\tenabled: jsii.Boolean(false),\n\tmaxCount: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst maxCountRuleProperty: elasticbeanstalk.CfnApplication.MaxCountRuleProperty = {\n  deleteSourceFromS3: false,\n  enabled: false,\n  maxCount: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplication.MaxCountRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplication.MaxCountRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst maxCountRuleProperty: elasticbeanstalk.CfnApplication.MaxCountRuleProperty = {\n  deleteSourceFromS3: false,\n  enabled: false,\n  maxCount: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 8,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "fb4657a79de7a00558ac5e065d6b8bd0413653888acf913b350c4f6f9e632df5"
    },
    "f9e6f648eb1b5ff183b7ddbaf9fedb57c91bf8f375f6fa2d1eecf9a5d36273ee": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_application_props = elasticbeanstalk.CfnApplicationProps(\n    application_name=\"applicationName\",\n    description=\"description\",\n    resource_lifecycle_config=elasticbeanstalk.CfnApplication.ApplicationResourceLifecycleConfigProperty(\n        service_role=\"serviceRole\",\n        version_lifecycle_config=elasticbeanstalk.CfnApplication.ApplicationVersionLifecycleConfigProperty(\n            max_age_rule=elasticbeanstalk.CfnApplication.MaxAgeRuleProperty(\n                delete_source_from_s3=False,\n                enabled=False,\n                max_age_in_days=123\n            ),\n            max_count_rule=elasticbeanstalk.CfnApplication.MaxCountRuleProperty(\n                delete_source_from_s3=False,\n                enabled=False,\n                max_count=123\n            )\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnApplicationProps cfnApplicationProps = new CfnApplicationProps {\n    ApplicationName = \"applicationName\",\n    Description = \"description\",\n    ResourceLifecycleConfig = new ApplicationResourceLifecycleConfigProperty {\n        ServiceRole = \"serviceRole\",\n        VersionLifecycleConfig = new ApplicationVersionLifecycleConfigProperty {\n            MaxAgeRule = new MaxAgeRuleProperty {\n                DeleteSourceFromS3 = false,\n                Enabled = false,\n                MaxAgeInDays = 123\n            },\n            MaxCountRule = new MaxCountRuleProperty {\n                DeleteSourceFromS3 = false,\n                Enabled = false,\n                MaxCount = 123\n            }\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnApplicationProps cfnApplicationProps = CfnApplicationProps.builder()\n        .applicationName(\"applicationName\")\n        .description(\"description\")\n        .resourceLifecycleConfig(ApplicationResourceLifecycleConfigProperty.builder()\n                .serviceRole(\"serviceRole\")\n                .versionLifecycleConfig(ApplicationVersionLifecycleConfigProperty.builder()\n                        .maxAgeRule(MaxAgeRuleProperty.builder()\n                                .deleteSourceFromS3(false)\n                                .enabled(false)\n                                .maxAgeInDays(123)\n                                .build())\n                        .maxCountRule(MaxCountRuleProperty.builder()\n                                .deleteSourceFromS3(false)\n                                .enabled(false)\n                                .maxCount(123)\n                                .build())\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnApplicationProps := &cfnApplicationProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\tdescription: jsii.String(\"description\"),\n\tresourceLifecycleConfig: &applicationResourceLifecycleConfigProperty{\n\t\tserviceRole: jsii.String(\"serviceRole\"),\n\t\tversionLifecycleConfig: &applicationVersionLifecycleConfigProperty{\n\t\t\tmaxAgeRule: &maxAgeRuleProperty{\n\t\t\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tmaxAgeInDays: jsii.Number(123),\n\t\t\t},\n\t\t\tmaxCountRule: &maxCountRuleProperty{\n\t\t\t\tdeleteSourceFromS3: jsii.Boolean(false),\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tmaxCount: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnApplicationProps: elasticbeanstalk.CfnApplicationProps = {\n  applicationName: 'applicationName',\n  description: 'description',\n  resourceLifecycleConfig: {\n    serviceRole: 'serviceRole',\n    versionLifecycleConfig: {\n      maxAgeRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxAgeInDays: 123,\n      },\n      maxCountRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxCount: 123,\n      },\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplicationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplicationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationProps: elasticbeanstalk.CfnApplicationProps = {\n  applicationName: 'applicationName',\n  description: 'description',\n  resourceLifecycleConfig: {\n    serviceRole: 'serviceRole',\n    versionLifecycleConfig: {\n      maxAgeRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxAgeInDays: 123,\n      },\n      maxCountRule: {\n        deleteSourceFromS3: false,\n        enabled: false,\n        maxCount: 123,\n      },\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 17,
        "91": 4,
        "153": 1,
        "169": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "e6d92be4236be7934c7c6aab2c11f75caf085b26c8dcf112f4d88d67aadf10c2"
    },
    "7200fd61fa02552d58ed81f29116e7ef3785dde3f39edc9f0cb60a7a8d8a3a8b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_application_version = elasticbeanstalk.CfnApplicationVersion(self, \"MyCfnApplicationVersion\",\n    application_name=\"applicationName\",\n    source_bundle=elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty(\n        s3_bucket=\"s3Bucket\",\n        s3_key=\"s3Key\"\n    ),\n\n    # the properties below are optional\n    description=\"description\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnApplicationVersion cfnApplicationVersion = new CfnApplicationVersion(this, \"MyCfnApplicationVersion\", new CfnApplicationVersionProps {\n    ApplicationName = \"applicationName\",\n    SourceBundle = new SourceBundleProperty {\n        S3Bucket = \"s3Bucket\",\n        S3Key = \"s3Key\"\n    },\n\n    // the properties below are optional\n    Description = \"description\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnApplicationVersion cfnApplicationVersion = CfnApplicationVersion.Builder.create(this, \"MyCfnApplicationVersion\")\n        .applicationName(\"applicationName\")\n        .sourceBundle(SourceBundleProperty.builder()\n                .s3Bucket(\"s3Bucket\")\n                .s3Key(\"s3Key\")\n                .build())\n\n        // the properties below are optional\n        .description(\"description\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnApplicationVersion := elasticbeanstalk.NewCfnApplicationVersion(this, jsii.String(\"MyCfnApplicationVersion\"), &cfnApplicationVersionProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\tsourceBundle: &sourceBundleProperty{\n\t\ts3Bucket: jsii.String(\"s3Bucket\"),\n\t\ts3Key: jsii.String(\"s3Key\"),\n\t},\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnApplicationVersion = new elasticbeanstalk.CfnApplicationVersion(this, 'MyCfnApplicationVersion', {\n  applicationName: 'applicationName',\n  sourceBundle: {\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n  },\n\n  // the properties below are optional\n  description: 'description',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersion",
        "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationVersion = new elasticbeanstalk.CfnApplicationVersion(this, 'MyCfnApplicationVersion', {\n  applicationName: 'applicationName',\n  sourceBundle: {\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n  },\n\n  // the properties below are optional\n  description: 'description',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "a8d5b913fb62e9fac6ee483c028f916874805f2a366c4efa0fa473ec41d821fd"
    },
    "45abd3e67dab79054b596326dee3cfaafb464a70794a9e00fa17082fc17db338": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\nsource_bundle_property = elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty(\n    s3_bucket=\"s3Bucket\",\n    s3_key=\"s3Key\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nSourceBundleProperty sourceBundleProperty = new SourceBundleProperty {\n    S3Bucket = \"s3Bucket\",\n    S3Key = \"s3Key\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nSourceBundleProperty sourceBundleProperty = SourceBundleProperty.builder()\n        .s3Bucket(\"s3Bucket\")\n        .s3Key(\"s3Key\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\nsourceBundleProperty := &sourceBundleProperty{\n\ts3Bucket: jsii.String(\"s3Bucket\"),\n\ts3Key: jsii.String(\"s3Key\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst sourceBundleProperty: elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty = {\n  s3Bucket: 's3Bucket',\n  s3Key: 's3Key',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sourceBundleProperty: elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty = {\n  s3Bucket: 's3Bucket',\n  s3Key: 's3Key',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6e8da41a1b6bd2fd6e3a0e9cfb9cf7f51f9b607194ac5f5a24a540d16f62f081"
    },
    "746a60e6d0220bb685465f3f5812e1992f43820ef3576217ee9aafa81ce24afe": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_application_version_props = elasticbeanstalk.CfnApplicationVersionProps(\n    application_name=\"applicationName\",\n    source_bundle=elasticbeanstalk.CfnApplicationVersion.SourceBundleProperty(\n        s3_bucket=\"s3Bucket\",\n        s3_key=\"s3Key\"\n    ),\n\n    # the properties below are optional\n    description=\"description\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnApplicationVersionProps cfnApplicationVersionProps = new CfnApplicationVersionProps {\n    ApplicationName = \"applicationName\",\n    SourceBundle = new SourceBundleProperty {\n        S3Bucket = \"s3Bucket\",\n        S3Key = \"s3Key\"\n    },\n\n    // the properties below are optional\n    Description = \"description\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnApplicationVersionProps cfnApplicationVersionProps = CfnApplicationVersionProps.builder()\n        .applicationName(\"applicationName\")\n        .sourceBundle(SourceBundleProperty.builder()\n                .s3Bucket(\"s3Bucket\")\n                .s3Key(\"s3Key\")\n                .build())\n\n        // the properties below are optional\n        .description(\"description\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnApplicationVersionProps := &cfnApplicationVersionProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\tsourceBundle: &sourceBundleProperty{\n\t\ts3Bucket: jsii.String(\"s3Bucket\"),\n\t\ts3Key: jsii.String(\"s3Key\"),\n\t},\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnApplicationVersionProps: elasticbeanstalk.CfnApplicationVersionProps = {\n  applicationName: 'applicationName',\n  sourceBundle: {\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n  },\n\n  // the properties below are optional\n  description: 'description',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnApplicationVersionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApplicationVersionProps: elasticbeanstalk.CfnApplicationVersionProps = {\n  applicationName: 'applicationName',\n  sourceBundle: {\n    s3Bucket: 's3Bucket',\n    s3Key: 's3Key',\n  },\n\n  // the properties below are optional\n  description: 'description',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "0fbde50de119da410a4d401153908462097a157ffb319a11dfc01b123baa9662"
    },
    "396e6901a13da2822c4c40d092db735dd9fabcc5edb6f935b8e6739e2ffc73b1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_configuration_template = elasticbeanstalk.CfnConfigurationTemplate(self, \"MyCfnConfigurationTemplate\",\n    application_name=\"applicationName\",\n\n    # the properties below are optional\n    description=\"description\",\n    environment_id=\"environmentId\",\n    option_settings=[elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty(\n        namespace=\"namespace\",\n        option_name=\"optionName\",\n\n        # the properties below are optional\n        resource_name=\"resourceName\",\n        value=\"value\"\n    )],\n    platform_arn=\"platformArn\",\n    solution_stack_name=\"solutionStackName\",\n    source_configuration=elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty(\n        application_name=\"applicationName\",\n        template_name=\"templateName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnConfigurationTemplate cfnConfigurationTemplate = new CfnConfigurationTemplate(this, \"MyCfnConfigurationTemplate\", new CfnConfigurationTemplateProps {\n    ApplicationName = \"applicationName\",\n\n    // the properties below are optional\n    Description = \"description\",\n    EnvironmentId = \"environmentId\",\n    OptionSettings = new [] { new ConfigurationOptionSettingProperty {\n        Namespace = \"namespace\",\n        OptionName = \"optionName\",\n\n        // the properties below are optional\n        ResourceName = \"resourceName\",\n        Value = \"value\"\n    } },\n    PlatformArn = \"platformArn\",\n    SolutionStackName = \"solutionStackName\",\n    SourceConfiguration = new SourceConfigurationProperty {\n        ApplicationName = \"applicationName\",\n        TemplateName = \"templateName\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnConfigurationTemplate cfnConfigurationTemplate = CfnConfigurationTemplate.Builder.create(this, \"MyCfnConfigurationTemplate\")\n        .applicationName(\"applicationName\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .environmentId(\"environmentId\")\n        .optionSettings(List.of(ConfigurationOptionSettingProperty.builder()\n                .namespace(\"namespace\")\n                .optionName(\"optionName\")\n\n                // the properties below are optional\n                .resourceName(\"resourceName\")\n                .value(\"value\")\n                .build()))\n        .platformArn(\"platformArn\")\n        .solutionStackName(\"solutionStackName\")\n        .sourceConfiguration(SourceConfigurationProperty.builder()\n                .applicationName(\"applicationName\")\n                .templateName(\"templateName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnConfigurationTemplate := elasticbeanstalk.NewCfnConfigurationTemplate(this, jsii.String(\"MyCfnConfigurationTemplate\"), &cfnConfigurationTemplateProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tenvironmentId: jsii.String(\"environmentId\"),\n\toptionSettings: []interface{}{\n\t\t&configurationOptionSettingProperty{\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\toptionName: jsii.String(\"optionName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tresourceName: jsii.String(\"resourceName\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tplatformArn: jsii.String(\"platformArn\"),\n\tsolutionStackName: jsii.String(\"solutionStackName\"),\n\tsourceConfiguration: &sourceConfigurationProperty{\n\t\tapplicationName: jsii.String(\"applicationName\"),\n\t\ttemplateName: jsii.String(\"templateName\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnConfigurationTemplate = new elasticbeanstalk.CfnConfigurationTemplate(this, 'MyCfnConfigurationTemplate', {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  description: 'description',\n  environmentId: 'environmentId',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  sourceConfiguration: {\n    applicationName: 'applicationName',\n    templateName: 'templateName',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplate"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplate",
        "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplateProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnConfigurationTemplate = new elasticbeanstalk.CfnConfigurationTemplate(this, 'MyCfnConfigurationTemplate', {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  description: 'description',\n  environmentId: 'environmentId',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  sourceConfiguration: {\n    applicationName: 'applicationName',\n    templateName: 'templateName',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 13,
        "75": 17,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "b75d39eed2f4ede8debb9ad7d9d6a7b3d80406707a1be31261ac38b553d432c8"
    },
    "1f68e46cdac22f1ba582ae6633d75236a0d7f40ca4e9e17c84e160db8d8f3ffc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\nconfiguration_option_setting_property = elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty(\n    namespace=\"namespace\",\n    option_name=\"optionName\",\n\n    # the properties below are optional\n    resource_name=\"resourceName\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nConfigurationOptionSettingProperty configurationOptionSettingProperty = new ConfigurationOptionSettingProperty {\n    Namespace = \"namespace\",\n    OptionName = \"optionName\",\n\n    // the properties below are optional\n    ResourceName = \"resourceName\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nConfigurationOptionSettingProperty configurationOptionSettingProperty = ConfigurationOptionSettingProperty.builder()\n        .namespace(\"namespace\")\n        .optionName(\"optionName\")\n\n        // the properties below are optional\n        .resourceName(\"resourceName\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\nconfigurationOptionSettingProperty := &configurationOptionSettingProperty{\n\tnamespace: jsii.String(\"namespace\"),\n\toptionName: jsii.String(\"optionName\"),\n\n\t// the properties below are optional\n\tresourceName: jsii.String(\"resourceName\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst configurationOptionSettingProperty: elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty = {\n  namespace: 'namespace',\n  optionName: 'optionName',\n\n  // the properties below are optional\n  resourceName: 'resourceName',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst configurationOptionSettingProperty: elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty = {\n  namespace: 'namespace',\n  optionName: 'optionName',\n\n  // the properties below are optional\n  resourceName: 'resourceName',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "775c0795d1b8bc98b33906dca42ed5aa7131f62aa0c9adcd699cc8f72ac6b41e"
    },
    "e1968154a2e1bad110e406062ce0142cd1cbf8360f405e1b75db675a734577b7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\nsource_configuration_property = elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty(\n    application_name=\"applicationName\",\n    template_name=\"templateName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nSourceConfigurationProperty sourceConfigurationProperty = new SourceConfigurationProperty {\n    ApplicationName = \"applicationName\",\n    TemplateName = \"templateName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nSourceConfigurationProperty sourceConfigurationProperty = SourceConfigurationProperty.builder()\n        .applicationName(\"applicationName\")\n        .templateName(\"templateName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\nsourceConfigurationProperty := &sourceConfigurationProperty{\n\tapplicationName: jsii.String(\"applicationName\"),\n\ttemplateName: jsii.String(\"templateName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst sourceConfigurationProperty: elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty = {\n  applicationName: 'applicationName',\n  templateName: 'templateName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sourceConfigurationProperty: elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty = {\n  applicationName: 'applicationName',\n  templateName: 'templateName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "43148527cd87bc7eeb740cec2914315e182ed2f3771d695498080f420c7e4246"
    },
    "fd0be975d95da9a8114329a805f26c87c0df3b08402078902717e09c15add3bb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_configuration_template_props = elasticbeanstalk.CfnConfigurationTemplateProps(\n    application_name=\"applicationName\",\n\n    # the properties below are optional\n    description=\"description\",\n    environment_id=\"environmentId\",\n    option_settings=[elasticbeanstalk.CfnConfigurationTemplate.ConfigurationOptionSettingProperty(\n        namespace=\"namespace\",\n        option_name=\"optionName\",\n\n        # the properties below are optional\n        resource_name=\"resourceName\",\n        value=\"value\"\n    )],\n    platform_arn=\"platformArn\",\n    solution_stack_name=\"solutionStackName\",\n    source_configuration=elasticbeanstalk.CfnConfigurationTemplate.SourceConfigurationProperty(\n        application_name=\"applicationName\",\n        template_name=\"templateName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnConfigurationTemplateProps cfnConfigurationTemplateProps = new CfnConfigurationTemplateProps {\n    ApplicationName = \"applicationName\",\n\n    // the properties below are optional\n    Description = \"description\",\n    EnvironmentId = \"environmentId\",\n    OptionSettings = new [] { new ConfigurationOptionSettingProperty {\n        Namespace = \"namespace\",\n        OptionName = \"optionName\",\n\n        // the properties below are optional\n        ResourceName = \"resourceName\",\n        Value = \"value\"\n    } },\n    PlatformArn = \"platformArn\",\n    SolutionStackName = \"solutionStackName\",\n    SourceConfiguration = new SourceConfigurationProperty {\n        ApplicationName = \"applicationName\",\n        TemplateName = \"templateName\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnConfigurationTemplateProps cfnConfigurationTemplateProps = CfnConfigurationTemplateProps.builder()\n        .applicationName(\"applicationName\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .environmentId(\"environmentId\")\n        .optionSettings(List.of(ConfigurationOptionSettingProperty.builder()\n                .namespace(\"namespace\")\n                .optionName(\"optionName\")\n\n                // the properties below are optional\n                .resourceName(\"resourceName\")\n                .value(\"value\")\n                .build()))\n        .platformArn(\"platformArn\")\n        .solutionStackName(\"solutionStackName\")\n        .sourceConfiguration(SourceConfigurationProperty.builder()\n                .applicationName(\"applicationName\")\n                .templateName(\"templateName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnConfigurationTemplateProps := &cfnConfigurationTemplateProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tenvironmentId: jsii.String(\"environmentId\"),\n\toptionSettings: []interface{}{\n\t\t&configurationOptionSettingProperty{\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\toptionName: jsii.String(\"optionName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tresourceName: jsii.String(\"resourceName\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tplatformArn: jsii.String(\"platformArn\"),\n\tsolutionStackName: jsii.String(\"solutionStackName\"),\n\tsourceConfiguration: &sourceConfigurationProperty{\n\t\tapplicationName: jsii.String(\"applicationName\"),\n\t\ttemplateName: jsii.String(\"templateName\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnConfigurationTemplateProps: elasticbeanstalk.CfnConfigurationTemplateProps = {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  description: 'description',\n  environmentId: 'environmentId',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  sourceConfiguration: {\n    applicationName: 'applicationName',\n    templateName: 'templateName',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplateProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnConfigurationTemplateProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnConfigurationTemplateProps: elasticbeanstalk.CfnConfigurationTemplateProps = {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  description: 'description',\n  environmentId: 'environmentId',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  sourceConfiguration: {\n    applicationName: 'applicationName',\n    templateName: 'templateName',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 12,
        "75": 17,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "a39810b7a6b377ed1d06b11201b5e81b2ddf56c961e4b6104f910ff4302390e5"
    },
    "546d441693a9dff4c583809fc118e5cec836d73d4eaeb4807aa113ef8c6bae08": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_environment = elasticbeanstalk.CfnEnvironment(self, \"MyCfnEnvironment\",\n    application_name=\"applicationName\",\n\n    # the properties below are optional\n    cname_prefix=\"cnamePrefix\",\n    description=\"description\",\n    environment_name=\"environmentName\",\n    operations_role=\"operationsRole\",\n    option_settings=[elasticbeanstalk.CfnEnvironment.OptionSettingProperty(\n        namespace=\"namespace\",\n        option_name=\"optionName\",\n\n        # the properties below are optional\n        resource_name=\"resourceName\",\n        value=\"value\"\n    )],\n    platform_arn=\"platformArn\",\n    solution_stack_name=\"solutionStackName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    template_name=\"templateName\",\n    tier=elasticbeanstalk.CfnEnvironment.TierProperty(\n        name=\"name\",\n        type=\"type\",\n        version=\"version\"\n    ),\n    version_label=\"versionLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnEnvironment cfnEnvironment = new CfnEnvironment(this, \"MyCfnEnvironment\", new CfnEnvironmentProps {\n    ApplicationName = \"applicationName\",\n\n    // the properties below are optional\n    CnamePrefix = \"cnamePrefix\",\n    Description = \"description\",\n    EnvironmentName = \"environmentName\",\n    OperationsRole = \"operationsRole\",\n    OptionSettings = new [] { new OptionSettingProperty {\n        Namespace = \"namespace\",\n        OptionName = \"optionName\",\n\n        // the properties below are optional\n        ResourceName = \"resourceName\",\n        Value = \"value\"\n    } },\n    PlatformArn = \"platformArn\",\n    SolutionStackName = \"solutionStackName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TemplateName = \"templateName\",\n    Tier = new TierProperty {\n        Name = \"name\",\n        Type = \"type\",\n        Version = \"version\"\n    },\n    VersionLabel = \"versionLabel\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnEnvironment cfnEnvironment = CfnEnvironment.Builder.create(this, \"MyCfnEnvironment\")\n        .applicationName(\"applicationName\")\n\n        // the properties below are optional\n        .cnamePrefix(\"cnamePrefix\")\n        .description(\"description\")\n        .environmentName(\"environmentName\")\n        .operationsRole(\"operationsRole\")\n        .optionSettings(List.of(OptionSettingProperty.builder()\n                .namespace(\"namespace\")\n                .optionName(\"optionName\")\n\n                // the properties below are optional\n                .resourceName(\"resourceName\")\n                .value(\"value\")\n                .build()))\n        .platformArn(\"platformArn\")\n        .solutionStackName(\"solutionStackName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .templateName(\"templateName\")\n        .tier(TierProperty.builder()\n                .name(\"name\")\n                .type(\"type\")\n                .version(\"version\")\n                .build())\n        .versionLabel(\"versionLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnEnvironment := elasticbeanstalk.NewCfnEnvironment(this, jsii.String(\"MyCfnEnvironment\"), &cfnEnvironmentProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\n\t// the properties below are optional\n\tcnamePrefix: jsii.String(\"cnamePrefix\"),\n\tdescription: jsii.String(\"description\"),\n\tenvironmentName: jsii.String(\"environmentName\"),\n\toperationsRole: jsii.String(\"operationsRole\"),\n\toptionSettings: []interface{}{\n\t\t&optionSettingProperty{\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\toptionName: jsii.String(\"optionName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tresourceName: jsii.String(\"resourceName\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tplatformArn: jsii.String(\"platformArn\"),\n\tsolutionStackName: jsii.String(\"solutionStackName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttemplateName: jsii.String(\"templateName\"),\n\ttier: &tierProperty{\n\t\tname: jsii.String(\"name\"),\n\t\ttype: jsii.String(\"type\"),\n\t\tversion: jsii.String(\"version\"),\n\t},\n\tversionLabel: jsii.String(\"versionLabel\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnEnvironment = new elasticbeanstalk.CfnEnvironment(this, 'MyCfnEnvironment', {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  cnamePrefix: 'cnamePrefix',\n  description: 'description',\n  environmentName: 'environmentName',\n  operationsRole: 'operationsRole',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  tier: {\n    name: 'name',\n    type: 'type',\n    version: 'version',\n  },\n  versionLabel: 'versionLabel',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnEnvironment"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnEnvironment",
        "@aws-cdk/aws-elasticbeanstalk.CfnEnvironmentProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEnvironment = new elasticbeanstalk.CfnEnvironment(this, 'MyCfnEnvironment', {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  cnamePrefix: 'cnamePrefix',\n  description: 'description',\n  environmentName: 'environmentName',\n  operationsRole: 'operationsRole',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  tier: {\n    name: 'name',\n    type: 'type',\n    version: 'version',\n  },\n  versionLabel: 'versionLabel',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 20,
        "75": 25,
        "104": 1,
        "192": 2,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 21,
        "290": 1
      },
      "fqnsFingerprint": "e8379fd757cbaea129793be74ab54393508bf4938e913bf07e65023223b38511"
    },
    "95b6d7eb2aaa2ff04d973bb0c812356d1effb54f7dd87c617f771bf7f8b5dfec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\noption_setting_property = elasticbeanstalk.CfnEnvironment.OptionSettingProperty(\n    namespace=\"namespace\",\n    option_name=\"optionName\",\n\n    # the properties below are optional\n    resource_name=\"resourceName\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nOptionSettingProperty optionSettingProperty = new OptionSettingProperty {\n    Namespace = \"namespace\",\n    OptionName = \"optionName\",\n\n    // the properties below are optional\n    ResourceName = \"resourceName\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nOptionSettingProperty optionSettingProperty = OptionSettingProperty.builder()\n        .namespace(\"namespace\")\n        .optionName(\"optionName\")\n\n        // the properties below are optional\n        .resourceName(\"resourceName\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\noptionSettingProperty := &optionSettingProperty{\n\tnamespace: jsii.String(\"namespace\"),\n\toptionName: jsii.String(\"optionName\"),\n\n\t// the properties below are optional\n\tresourceName: jsii.String(\"resourceName\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst optionSettingProperty: elasticbeanstalk.CfnEnvironment.OptionSettingProperty = {\n  namespace: 'namespace',\n  optionName: 'optionName',\n\n  // the properties below are optional\n  resourceName: 'resourceName',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnEnvironment.OptionSettingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnEnvironment.OptionSettingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst optionSettingProperty: elasticbeanstalk.CfnEnvironment.OptionSettingProperty = {\n  namespace: 'namespace',\n  optionName: 'optionName',\n\n  // the properties below are optional\n  resourceName: 'resourceName',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "9020a377ceb0e0dd749ac3f37469916922d655447d971330e2653ef002e21658"
    },
    "d6625eb7c6681c16151846494644e6e37843285386ea44f7c1e7aa8782392f88": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ntier_property = elasticbeanstalk.CfnEnvironment.TierProperty(\n    name=\"name\",\n    type=\"type\",\n    version=\"version\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nTierProperty tierProperty = new TierProperty {\n    Name = \"name\",\n    Type = \"type\",\n    Version = \"version\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nTierProperty tierProperty = TierProperty.builder()\n        .name(\"name\")\n        .type(\"type\")\n        .version(\"version\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ntierProperty := &tierProperty{\n\tname: jsii.String(\"name\"),\n\ttype: jsii.String(\"type\"),\n\tversion: jsii.String(\"version\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst tierProperty: elasticbeanstalk.CfnEnvironment.TierProperty = {\n  name: 'name',\n  type: 'type',\n  version: 'version',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnEnvironment.TierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnEnvironment.TierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tierProperty: elasticbeanstalk.CfnEnvironment.TierProperty = {\n  name: 'name',\n  type: 'type',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "9f330348083bb5676401468e23f73c0b0c36ee6681fa3e8bea427e6a8ce2d152"
    },
    "261ce6b6322708cba04bdb9443e283c39e26c54aa52eacfa5eea1c14d8001c10": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_elasticbeanstalk as elasticbeanstalk\n\ncfn_environment_props = elasticbeanstalk.CfnEnvironmentProps(\n    application_name=\"applicationName\",\n\n    # the properties below are optional\n    cname_prefix=\"cnamePrefix\",\n    description=\"description\",\n    environment_name=\"environmentName\",\n    operations_role=\"operationsRole\",\n    option_settings=[elasticbeanstalk.CfnEnvironment.OptionSettingProperty(\n        namespace=\"namespace\",\n        option_name=\"optionName\",\n\n        # the properties below are optional\n        resource_name=\"resourceName\",\n        value=\"value\"\n    )],\n    platform_arn=\"platformArn\",\n    solution_stack_name=\"solutionStackName\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )],\n    template_name=\"templateName\",\n    tier=elasticbeanstalk.CfnEnvironment.TierProperty(\n        name=\"name\",\n        type=\"type\",\n        version=\"version\"\n    ),\n    version_label=\"versionLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ElasticBeanstalk;\n\nCfnEnvironmentProps cfnEnvironmentProps = new CfnEnvironmentProps {\n    ApplicationName = \"applicationName\",\n\n    // the properties below are optional\n    CnamePrefix = \"cnamePrefix\",\n    Description = \"description\",\n    EnvironmentName = \"environmentName\",\n    OperationsRole = \"operationsRole\",\n    OptionSettings = new [] { new OptionSettingProperty {\n        Namespace = \"namespace\",\n        OptionName = \"optionName\",\n\n        // the properties below are optional\n        ResourceName = \"resourceName\",\n        Value = \"value\"\n    } },\n    PlatformArn = \"platformArn\",\n    SolutionStackName = \"solutionStackName\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } },\n    TemplateName = \"templateName\",\n    Tier = new TierProperty {\n        Name = \"name\",\n        Type = \"type\",\n        Version = \"version\"\n    },\n    VersionLabel = \"versionLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.elasticbeanstalk.*;\n\nCfnEnvironmentProps cfnEnvironmentProps = CfnEnvironmentProps.builder()\n        .applicationName(\"applicationName\")\n\n        // the properties below are optional\n        .cnamePrefix(\"cnamePrefix\")\n        .description(\"description\")\n        .environmentName(\"environmentName\")\n        .operationsRole(\"operationsRole\")\n        .optionSettings(List.of(OptionSettingProperty.builder()\n                .namespace(\"namespace\")\n                .optionName(\"optionName\")\n\n                // the properties below are optional\n                .resourceName(\"resourceName\")\n                .value(\"value\")\n                .build()))\n        .platformArn(\"platformArn\")\n        .solutionStackName(\"solutionStackName\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .templateName(\"templateName\")\n        .tier(TierProperty.builder()\n                .name(\"name\")\n                .type(\"type\")\n                .version(\"version\")\n                .build())\n        .versionLabel(\"versionLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport elasticbeanstalk \"github.com/aws-samples/dummy/awscdkawselasticbeanstalk\"\n\ncfnEnvironmentProps := &cfnEnvironmentProps{\n\tapplicationName: jsii.String(\"applicationName\"),\n\n\t// the properties below are optional\n\tcnamePrefix: jsii.String(\"cnamePrefix\"),\n\tdescription: jsii.String(\"description\"),\n\tenvironmentName: jsii.String(\"environmentName\"),\n\toperationsRole: jsii.String(\"operationsRole\"),\n\toptionSettings: []interface{}{\n\t\t&optionSettingProperty{\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\toptionName: jsii.String(\"optionName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tresourceName: jsii.String(\"resourceName\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tplatformArn: jsii.String(\"platformArn\"),\n\tsolutionStackName: jsii.String(\"solutionStackName\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttemplateName: jsii.String(\"templateName\"),\n\ttier: &tierProperty{\n\t\tname: jsii.String(\"name\"),\n\t\ttype: jsii.String(\"type\"),\n\t\tversion: jsii.String(\"version\"),\n\t},\n\tversionLabel: jsii.String(\"versionLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\nconst cfnEnvironmentProps: elasticbeanstalk.CfnEnvironmentProps = {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  cnamePrefix: 'cnamePrefix',\n  description: 'description',\n  environmentName: 'environmentName',\n  operationsRole: 'operationsRole',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  tier: {\n    name: 'name',\n    type: 'type',\n    version: 'version',\n  },\n  versionLabel: 'versionLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-elasticbeanstalk.CfnEnvironmentProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-elasticbeanstalk.CfnEnvironmentProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as elasticbeanstalk from '@aws-cdk/aws-elasticbeanstalk';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnEnvironmentProps: elasticbeanstalk.CfnEnvironmentProps = {\n  applicationName: 'applicationName',\n\n  // the properties below are optional\n  cnamePrefix: 'cnamePrefix',\n  description: 'description',\n  environmentName: 'environmentName',\n  operationsRole: 'operationsRole',\n  optionSettings: [{\n    namespace: 'namespace',\n    optionName: 'optionName',\n\n    // the properties below are optional\n    resourceName: 'resourceName',\n    value: 'value',\n  }],\n  platformArn: 'platformArn',\n  solutionStackName: 'solutionStackName',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  templateName: 'templateName',\n  tier: {\n    name: 'name',\n    type: 'type',\n    version: 'version',\n  },\n  versionLabel: 'versionLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 19,
        "75": 25,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 21,
        "290": 1
      },
      "fqnsFingerprint": "7edf811a1d857379ac7ae06592b15f9c9d22ef0ef0324f7e07f1e1021ec2e03e"
    }
  }
}